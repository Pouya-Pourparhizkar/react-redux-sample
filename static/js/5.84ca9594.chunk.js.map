{"version":3,"sources":["hero/models/index.ts","shared/highlight/highlight.tsx","shared/highlight/index.ts","hero/models/view-mode.ts","hero/store/hero.types.ts","hero/hero-edit/hero-edit.tsx","hero/hero-list/hero-list.tsx","hero/store/hero.reducer.ts","hero/api/hero.api.ts","hero/store/hero.actions.ts","hero/store/hero.saga.ts","hero/hero.module.ts","hero/hero.tsx","hero/index.ts"],"names":["useStyles","makeStyles","palette","createStyles","root","borderRadius","fontWeight","margin","padding","backgroundColor","primary","light","color","getContrastText","Highlight","children","classes","Box","className","component","bgcolor","ViewMode","HeroActionTypes","spacing","marginBottom","HeroEdit","props","formSchema","Yup","shape","id","name","required","powerId","quote","initialValues","hero","validationSchema","onSubmit","onSaveClick","errors","Typography","variant","display","flexDirection","label","placeholder","FormControl","error","InputLabel","labelId","powers","map","power","MenuItem","key","value","FormHelperText","multiline","rows","Button","startIcon","Icon","onClick","onCancelClick","type","HeroList","Fragment","alignItems","onAddClick","onEditClick","disabled","selectedHero","onRemoveClick","flexGrow","IconButton","edge","Divider","List","heroes","ListItem","button","onSelectClick","ListItemText","toString","ListItemSecondaryAction","Checkbox","onChange","checked","initialState","Array","loadingHeroes","loadingPowers","snackbarOpen","viewMode","reducer","state","action","ADD_HERO_SUCCESS","concat","payload","undefined","LOAD_HEROES","LOAD_HEROES_SUCCESS","LOAD_POWERS","LOAD_POWERS_SUCCESS","REMOVE_HERO","filter","x","SELECT_HERO","SET_VIEW_MODE","SHOW_SNACKBAR","snackbarMessage","HIDE_SNACKBAR","UPDATE_HERO_SUCCESS","HeroApi","axios","post","response","data","delete","get","put","addHeroSuccess","HeroTypes","loadHeroesSuccess","loadPowersSuccess","removeHeroSuccess","REMOVE_HERO_SUCCESS","setViewMode","showSnackbar","message","updateHeroSuccess","addHero","loadHeroes","loadPowers","removeHero","updateHero","watchRequests","heroSaga","call","createHero","actions","getHeroes","getPowers","deleteHero","takeLatest","ADD_HERO","UPDATE_HERO","all","fork","HeroModule","reducerMap","heroReducer","sagas","initialActions","finalActions","mapDispatchToProps","hideSnackbar","selectHero","connector","connect","useEffect","modules","Hidden","smDown","flex","clone","Card","Add","Edit","ml","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","event","reason","open"],"mappings":"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","file":"static/js/5.84ca9594.chunk.js","sourcesContent":["export * from './hero';\r\nexport * from './power';\r\nexport * from './view-mode';\r\n","import { Box, createStyles, makeStyles, Theme } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(({ palette }: Theme) => createStyles({\r\n  root: {\r\n    borderRadius: '16px',\r\n    fontWeight: 500,\r\n    margin: '0 2px',\r\n    padding: '0 8px',\r\n    backgroundColor: palette.primary.light,\r\n    color: palette.getContrastText(palette.primary.light),\r\n  },\r\n}));\r\n\r\nconst Highlight: React.FunctionComponent = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root} component=\"span\" color=\"text.primary\" bgcolor=\"primary.light\">\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Highlight;\r\n","export { default } from './highlight';\r\n","export enum ViewMode {\r\n  Add = 'add',\r\n  Edit = 'edit',\r\n  List = 'list',\r\n}\r\n","import { Hero, Power, ViewMode } from '../models';\r\n\r\nexport enum HeroActionTypes {\r\n  ADD_HERO = '[Hero] Add hero',\r\n  ADD_HERO_SUCCESS = '[Hero] Added hero successfuly',\r\n  LOAD_HEROES = '[Hero] Load all heroes',\r\n  LOAD_HEROES_SUCCESS = '[Hero] Loaded all heroes successfuly',\r\n  LOAD_POWERS = '[Hero] Load all powers',\r\n  LOAD_POWERS_SUCCESS = '[Hero] Loaded all powers successfuly',\r\n  REMOVE_HERO = '[Hero] Remove hero',\r\n  REMOVE_HERO_SUCCESS = '[Hero] Removed hero successfuly',\r\n  SELECT_HERO = '[Hero] Select hero',\r\n  SET_VIEW_MODE = '[Hero] Set View Mode',\r\n  SHOW_SNACKBAR = '[Hero] Show snackbar',\r\n  HIDE_SNACKBAR = '[Hero] Hide snackbar',\r\n  UPDATE_HERO = '[Hero] Update hero',\r\n  UPDATE_HERO_SUCCESS = '[Hero] Updated hero succesfuly',\r\n}\r\n\r\nexport interface AddHero {\r\n  type: typeof HeroActionTypes.ADD_HERO;\r\n  payload: Hero;\r\n}\r\n\r\nexport interface AddHeroSuccess {\r\n  type: typeof HeroActionTypes.ADD_HERO_SUCCESS;\r\n  payload: Hero;\r\n}\r\n\r\nexport interface LoadHeroes {\r\n  type: typeof HeroActionTypes.LOAD_HEROES;\r\n}\r\n\r\nexport interface LoadHeroesSuccess {\r\n  type: typeof HeroActionTypes.LOAD_HEROES_SUCCESS;\r\n  payload: Hero[];\r\n}\r\n\r\nexport interface LoadPowers {\r\n  type: typeof HeroActionTypes.LOAD_POWERS;\r\n}\r\n\r\nexport interface LoadPowersSuccess {\r\n  type: typeof HeroActionTypes.LOAD_POWERS_SUCCESS;\r\n  payload: Power[];\r\n}\r\n\r\nexport interface SelectHero {\r\n  type: typeof HeroActionTypes.SELECT_HERO;\r\n  payload: Hero;\r\n}\r\n\r\nexport interface SetViewMode {\r\n  type: typeof HeroActionTypes.SET_VIEW_MODE;\r\n  payload: ViewMode;\r\n}\r\n\r\nexport interface ShowSnackbar {\r\n  type: typeof HeroActionTypes.SHOW_SNACKBAR;\r\n  payload: string;\r\n}\r\n\r\nexport interface HideSnackbar {\r\n  type: typeof HeroActionTypes.HIDE_SNACKBAR;\r\n}\r\n\r\nexport interface RemoveHero {\r\n  type: typeof HeroActionTypes.REMOVE_HERO;\r\n  payload: Hero;\r\n}\r\n\r\nexport interface RemoveHeroSuccess {\r\n  type: typeof HeroActionTypes.REMOVE_HERO_SUCCESS;\r\n  payload: Hero;\r\n}\r\n\r\nexport interface UpdateHero {\r\n  type: typeof HeroActionTypes.UPDATE_HERO;\r\n  payload: Hero;\r\n}\r\n\r\nexport interface UpdateHeroSuccess {\r\n  type: typeof HeroActionTypes.UPDATE_HERO_SUCCESS;\r\n  payload: Hero;\r\n}\r\n\r\nexport type HeroActions\r\n  = AddHero\r\n  | AddHeroSuccess\r\n  | LoadHeroes\r\n  | LoadHeroesSuccess\r\n  | LoadPowers\r\n  | LoadPowersSuccess\r\n  | SelectHero\r\n  | SetViewMode\r\n  | ShowSnackbar\r\n  | HideSnackbar\r\n  | RemoveHero\r\n  | RemoveHeroSuccess\r\n  | UpdateHero\r\n  | UpdateHeroSuccess;\r\n","import {\r\n  Box,\r\n  Button,\r\n  createStyles,\r\n  FormControl,\r\n  FormHelperText,\r\n  Icon,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { Form, Formik } from 'formik';\r\nimport { Select, TextField } from 'formik-material-ui';\r\nimport React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport { Hero, Power } from '../models';\r\n\r\ninterface Props {\r\n  hero?: Hero;\r\n  powers: Power[];\r\n  onCancelClick: () => void;\r\n  onSaveClick: (hero: Hero) => void;\r\n}\r\n\r\nconst useStyles = makeStyles(({ spacing }: Theme) => {\r\n  return createStyles({\r\n    root: {\r\n      '& .MuiFormControl-root': {\r\n        marginBottom: spacing(2),\r\n      },\r\n    },\r\n  });\r\n});\r\n\r\nconst HeroEdit: React.FunctionComponent<Props> = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const formSchema = Yup.object().shape<Hero>({\r\n    id: Yup\r\n      .number(),\r\n    name: Yup\r\n      .string()\r\n      .required('This field is required'),\r\n    powerId: Yup\r\n      .number()\r\n      .required('This field is required'),\r\n    quote: Yup\r\n      .string(),\r\n  });\r\n\r\n  const initialValues: Hero = {\r\n    id: -1,\r\n    name: '',\r\n    powerId: '' as any,\r\n    quote: '',\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={props.hero || initialValues}\r\n      validationSchema={formSchema}\r\n      onSubmit={props.onSaveClick}\r\n    >\r\n      {({ errors }) => (\r\n        <Form className={classes.root}>\r\n          <Typography className=\"pt-16 pb-24\" variant=\"subtitle1\">\r\n            {!props.hero ? 'Create' : 'Edit'} Hero\r\n          </Typography>\r\n          <Box display=\"flex\" flexDirection=\"column\">\r\n            <TextField\r\n              name=\"name\"\r\n              label=\"Hero Name\"\r\n              placeholder=\"Enter Hero's Name...\"\r\n              variant=\"filled\"\r\n            />\r\n            <FormControl variant=\"filled\" error={!!errors.powerId}>\r\n              <InputLabel id=\"power-label\">Superpower</InputLabel>\r\n              <Select labelId=\"power-label\" name=\"powerId\">\r\n                {props.powers.map(power => (<MenuItem key={power.id} value={power.id}>{power.name}</MenuItem>))}\r\n              </Select>\r\n              {!!errors.powerId ? <FormHelperText>{errors.powerId}</FormHelperText> : null}\r\n            </FormControl>\r\n            <TextField\r\n              id=\"quote\"\r\n              label=\"Favorite Quote\"\r\n              multiline={true}\r\n              name=\"quote\"\r\n              placeholder=\"Favorite Hero quote...\"\r\n              rows=\"4\"\r\n              variant=\"filled\"\r\n            />\r\n            <Box className=\"py-16\">\r\n              <Button className=\"mr-16\" startIcon={<Icon>close</Icon>} onClick={props.onCancelClick}>\r\n                Cancel\r\n              </Button>\r\n              <Button className=\"mr-16\" color=\"secondary\" startIcon={<Icon>check</Icon>} type=\"submit\">\r\n                {!props.hero ? 'Save' : 'Update'}\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default HeroEdit;\r\n","import { Box, Button, Checkbox, Divider, Icon, IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nimport { Hero } from '../models';\r\n\r\ninterface Props {\r\n  heroes: Hero[];\r\n  selectedHero?: Hero;\r\n  onSelectClick: (hero: Hero) => void;\r\n  onAddClick: () => void;\r\n  onEditClick: () => void;\r\n  onRemoveClick: (hero: Hero) => void;\r\n}\r\n\r\nconst HeroList: React.FunctionComponent<Props> = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Box className=\"py-8 pr-8\" display=\"flex\" alignItems=\"center\">\r\n        <Button\r\n          className=\"mr-16\"\r\n          color=\"secondary\"\r\n          startIcon={<Icon>add</Icon>}\r\n          onClick={props.onAddClick}\r\n        >\r\n          Add\r\n        </Button>\r\n        <Button\r\n          className=\"mr-16\"\r\n          color=\"secondary\"\r\n          startIcon={<Icon>edit</Icon>}\r\n          onClick={props.onEditClick}\r\n          disabled={props.selectedHero == null}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          className=\"mr-16\"\r\n          color=\"secondary\"\r\n          startIcon={<Icon>delete</Icon>}\r\n          onClick={() => props.selectedHero && props.onRemoveClick(props.selectedHero)}\r\n          disabled={props.selectedHero == null}\r\n        >\r\n          Remove\r\n        </Button>\r\n        <Box flexGrow={1} />\r\n        <IconButton edge=\"end\">\r\n          <Icon>search</Icon>\r\n        </IconButton>\r\n      </Box>\r\n      <Divider />\r\n      <List className=\"py-16\">\r\n        {props.heroes && props.heroes.map(hero => {\r\n          return (\r\n            <ListItem\r\n              key={hero.id}\r\n              button={true}\r\n              onClick={() => props.onSelectClick(hero)}\r\n            >\r\n              <ListItemText id={hero.id.toString()} primary={hero.name} />\r\n              <ListItemSecondaryAction>\r\n                <Checkbox\r\n                  edge=\"end\"\r\n                  onChange={() => props.onSelectClick(hero)}\r\n                  checked={props.selectedHero === hero}\r\n                />\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HeroList;\r\n","import { Hero, Power, ViewMode } from '../models';\r\nimport { HeroActions, HeroActionTypes } from './hero.types';\r\n\r\nexport interface HeroState {\r\n  heroes: Hero[];\r\n  powers: Power[];\r\n  loadingHeroes: boolean;\r\n  loadingPowers: boolean;\r\n  selectedHero?: Hero;\r\n  snackbarOpen: boolean;\r\n  snackbarMessage?: string;\r\n  viewMode: ViewMode;\r\n}\r\n\r\nconst initialState: HeroState = {\r\n  heroes: Array<Hero>(),\r\n  powers: Array<Power>(),\r\n  loadingHeroes: false,\r\n  loadingPowers: false,\r\n  snackbarOpen: false,\r\n  viewMode: ViewMode.List,\r\n};\r\n\r\nconst reducer = (state = initialState, action: HeroActions): HeroState => {\r\n  switch (action.type) {\r\n    case HeroActionTypes.ADD_HERO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        heroes: state.heroes.concat(action.payload),\r\n        selectedHero: undefined,\r\n      };\r\n    case HeroActionTypes.LOAD_HEROES:\r\n      return {\r\n        ...state,\r\n        loadingHeroes: true,\r\n      };\r\n    case HeroActionTypes.LOAD_HEROES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        heroes: action.payload,\r\n        loadingHeroes: false,\r\n      };\r\n    case HeroActionTypes.LOAD_POWERS:\r\n      return {\r\n        ...state,\r\n        loadingPowers: true,\r\n      };\r\n    case HeroActionTypes.LOAD_POWERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        powers: action.payload,\r\n        loadingPowers: false,\r\n      };\r\n    case HeroActionTypes.REMOVE_HERO:\r\n      return {\r\n        ...state,\r\n        heroes: state.heroes.filter(x => x.id !== action.payload.id),\r\n        selectedHero: undefined,\r\n      };\r\n    case HeroActionTypes.SELECT_HERO:\r\n      return {\r\n        ...state,\r\n        selectedHero: action.payload,\r\n      };\r\n    case HeroActionTypes.SET_VIEW_MODE:\r\n      return {\r\n        ...state,\r\n        viewMode: action.payload,\r\n      };\r\n    case HeroActionTypes.SHOW_SNACKBAR:\r\n      return {\r\n        ...state,\r\n        snackbarOpen: true,\r\n        snackbarMessage: action.payload,\r\n      };\r\n    case HeroActionTypes.HIDE_SNACKBAR:\r\n      return {\r\n        ...state,\r\n        snackbarOpen: false,\r\n        snackbarMessage: undefined,\r\n      };\r\n    case HeroActionTypes.UPDATE_HERO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        heroes: state.heroes.map(x => x.id === action.payload.id ? action.payload : x),\r\n        selectedHero: undefined,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import axios from 'axios';\r\nimport { Hero, Power } from '../models';\r\n\r\nexport class HeroApi {\r\n\r\n  // heroes\r\n\r\n  static async createHero(hero: Hero): Promise<Hero> {\r\n    const response = await axios.post('/api/heroes', hero);\r\n    return response.data;\r\n  }\r\n\r\n  static async deleteHero(hero: Hero): Promise<Hero> {\r\n    const response = await axios.delete(`/api/heroes/${hero.id}`);\r\n    return response.data;\r\n  }\r\n\r\n  static async getHeroes(): Promise<Hero[]> {\r\n    const response = await axios.get<Hero[]>('/api/heroes');\r\n    return response.data;\r\n  }\r\n\r\n  static async updateHero(hero: Hero): Promise<Hero> {\r\n    const response = await axios.put(`/api/heroes/${hero.id}`, hero);\r\n    return response.data;\r\n  }\r\n\r\n  // powers\r\n\r\n  static async getPowers(): Promise<Power[]> {\r\n    const response = await axios.get<Power[]>('/api/powers');\r\n    return response.data;\r\n  }\r\n}\r\n","import { Hero, Power, ViewMode } from '../models';\r\nimport * as HeroTypes from './hero.types';\r\n\r\nexport const addHero = (hero: Hero): HeroTypes.AddHero => {\r\n  return {\r\n    type: HeroTypes.HeroActionTypes.ADD_HERO,\r\n    payload: hero,\r\n  };\r\n};\r\n\r\nexport const addHeroSuccess = (hero: Hero): HeroTypes.AddHeroSuccess => {\r\n  return {\r\n    type: HeroTypes.HeroActionTypes.ADD_HERO_SUCCESS,\r\n    payload: hero,\r\n  };\r\n};\r\n\r\nexport const loadHeroes = (): HeroTypes.LoadHeroes => {\r\n  return {\r\n    type: HeroTypes.HeroActionTypes.LOAD_HEROES,\r\n  };\r\n};\r\n\r\nexport const loadHeroesSuccess = (heroes: Hero[]): HeroTypes.LoadHeroesSuccess => {\r\n  return {\r\n    type: HeroTypes.HeroActionTypes.LOAD_HEROES_SUCCESS,\r\n    payload: heroes,\r\n  };\r\n};\r\n\r\nexport const loadPowers = (): HeroTypes.LoadPowers => {\r\n  return {\r\n    type: HeroTypes.HeroActionTypes.LOAD_POWERS,\r\n  };\r\n};\r\n\r\nexport const loadPowersSuccess = (powers: Power[]): HeroTypes.LoadPowersSuccess => {\r\n  return {\r\n    type: HeroTypes.HeroActionTypes.LOAD_POWERS_SUCCESS,\r\n    payload: powers,\r\n  };\r\n};\r\n\r\nexport const removeHero = (hero: Hero): HeroTypes.RemoveHero => {\r\n  return {\r\n    type: HeroTypes.HeroActionTypes.REMOVE_HERO,\r\n    payload: hero,\r\n  };\r\n};\r\n\r\nexport const removeHeroSuccess = (hero: Hero): HeroTypes.RemoveHeroSuccess => {\r\n  return {\r\n    type: HeroTypes.HeroActionTypes.REMOVE_HERO_SUCCESS,\r\n    payload: hero,\r\n  };\r\n};\r\n\r\nexport const selectHero = (hero: Hero): HeroTypes.SelectHero => {\r\n  return {\r\n    type: HeroTypes.HeroActionTypes.SELECT_HERO,\r\n    payload: hero,\r\n  };\r\n};\r\n\r\nexport const setViewMode = (viewMode: ViewMode): HeroTypes.SetViewMode => {\r\n  return {\r\n    type: HeroTypes.HeroActionTypes.SET_VIEW_MODE,\r\n    payload: viewMode,\r\n  };\r\n};\r\n\r\nexport const showSnackbar = (message: string): HeroTypes.ShowSnackbar => {\r\n  return {\r\n    type: HeroTypes.HeroActionTypes.SHOW_SNACKBAR,\r\n    payload: message,\r\n  };\r\n};\r\n\r\nexport const hideSnackbar = (): HeroTypes.HideSnackbar => {\r\n  return {\r\n    type: HeroTypes.HeroActionTypes.HIDE_SNACKBAR,\r\n  };\r\n};\r\n\r\nexport const updateHero = (hero: Hero): HeroTypes.UpdateHero => {\r\n  return {\r\n    type: HeroTypes.HeroActionTypes.UPDATE_HERO,\r\n    payload: hero,\r\n  };\r\n};\r\n\r\nexport const updateHeroSuccess = (hero: Hero): HeroTypes.UpdateHeroSuccess => {\r\n  return {\r\n    type: HeroTypes.HeroActionTypes.UPDATE_HERO_SUCCESS,\r\n    payload: hero,\r\n  };\r\n};\r\n","import { all, call, fork, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport { HeroApi } from '../api';\r\nimport { ViewMode } from '../models';\r\nimport * as actions from './hero.actions';\r\nimport { HeroActionTypes } from './hero.types';\r\n\r\nfunction* addHero(action: ReturnType<typeof actions.addHero>) {\r\n  const hero = yield call(() => HeroApi.createHero(action.payload));\r\n  yield put(actions.addHeroSuccess(hero));\r\n  yield put(actions.setViewMode(ViewMode.List));\r\n  yield put(actions.showSnackbar(`${ action.payload.name } has been added successfully`));\r\n}\r\n\r\nfunction* loadHeroes() {\r\n  const heroes = yield call(HeroApi.getHeroes);\r\n  yield put(actions.loadHeroesSuccess(heroes));\r\n}\r\n\r\nfunction* loadPowers() {\r\n  const powers = yield call(HeroApi.getPowers);\r\n  yield put(actions.loadPowersSuccess(powers));\r\n}\r\n\r\nfunction* removeHero(action: ReturnType<typeof actions.removeHero>) {\r\n  const hero = yield call(() => HeroApi.deleteHero(action.payload));\r\n  yield put(actions.removeHeroSuccess(hero));\r\n  yield put(actions.showSnackbar(`${ action.payload.name } has been removed successfully`));\r\n}\r\n\r\nfunction* updateHero(action: ReturnType<typeof actions.updateHero>) {\r\n  const hero = yield call(() => HeroApi.updateHero(action.payload));\r\n  yield put(actions.updateHeroSuccess(action.payload));\r\n  yield put(actions.setViewMode(ViewMode.List));\r\n  yield put(actions.showSnackbar(`${ action.payload.name } has been updated successfully`));\r\n}\r\n\r\nfunction* watchRequests() {\r\n  yield takeLatest(HeroActionTypes.ADD_HERO, addHero);\r\n  yield takeLatest(HeroActionTypes.LOAD_HEROES, loadHeroes);\r\n  yield takeLatest(HeroActionTypes.LOAD_POWERS, loadPowers);\r\n  yield takeLatest(HeroActionTypes.REMOVE_HERO, removeHero);\r\n  yield takeLatest(HeroActionTypes.UPDATE_HERO, updateHero);\r\n}\r\n\r\nfunction* heroSaga() {\r\n  yield all([fork(watchRequests)]);\r\n}\r\n\r\nexport default heroSaga;\r\n","import { ISagaModule } from 'redux-dynamic-modules-saga';\r\n\r\nimport heroReducer, { HeroState } from './store/hero.reducer';\r\nimport heroSaga from './store/hero.saga';\r\n\r\nexport interface HeroAwareState {\r\n  hero: HeroState;\r\n}\r\n\r\nexport const HeroModule: ISagaModule<HeroAwareState> = {\r\n  id: 'hero',\r\n  reducerMap: { hero: heroReducer },\r\n  sagas: [heroSaga],\r\n  initialActions: [],\r\n  finalActions: [],\r\n};\r\n","import { Box, Card, Hidden, Snackbar, Typography } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { DynamicModuleLoader } from 'redux-dynamic-modules';\r\n\r\nimport Highlight from '../shared/highlight';\r\nimport HeroEdit from './hero-edit';\r\nimport HeroList from './hero-list';\r\nimport { HeroAwareState, HeroModule } from './hero.module';\r\nimport { ViewMode } from './models';\r\nimport * as actions from './store/hero.actions';\r\n\r\nconst mapStateToProps = ({ hero }: HeroAwareState) => {\r\n  return {\r\n    heroes: hero?.heroes,\r\n    powers: hero?.powers,\r\n    selectedHero: hero?.selectedHero,\r\n    snackbarMessage: hero?.snackbarMessage,\r\n    snackbarOpen: hero?.snackbarOpen,\r\n    viewMode: hero?.viewMode,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addHero: actions.addHero,\r\n  loadHeroes: actions.loadHeroes,\r\n  loadPowers: actions.loadPowers,\r\n  hideSnackbar: actions.hideSnackbar,\r\n  removeHero: actions.removeHero,\r\n  setViewMode: actions.setViewMode,\r\n  selectHero: actions.selectHero,\r\n  updateHero: actions.updateHero,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype Props = ConnectedProps<typeof connector>;\r\n\r\nconst Hero: React.FunctionComponent<Props> = (props) => {\r\n  const {\r\n    heroes,\r\n    powers,\r\n    selectedHero,\r\n    snackbarMessage,\r\n    snackbarOpen,\r\n    viewMode,\r\n    addHero,\r\n    loadHeroes,\r\n    loadPowers,\r\n    hideSnackbar,\r\n    removeHero,\r\n    selectHero,\r\n    setViewMode,\r\n    updateHero,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    loadHeroes();\r\n    loadPowers();\r\n  }, [loadHeroes, loadPowers]);\r\n\r\n  const onSnackbarClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\r\n    if (reason !== 'clickaway') {\r\n      hideSnackbar();\r\n    }\r\n  };\r\n\r\n  const cardView = () => {\r\n    if (viewMode === ViewMode.Add) {\r\n      return <HeroEdit\r\n        onCancelClick={() => setViewMode(ViewMode.List)}\r\n        onSaveClick={addHero}\r\n        powers={powers}\r\n      />;\r\n    }\r\n    if (viewMode === ViewMode.Edit) {\r\n      return <HeroEdit\r\n        hero={selectedHero}\r\n        onCancelClick={() => setViewMode(ViewMode.List)}\r\n        onSaveClick={updateHero}\r\n        powers={powers}\r\n      />;\r\n    }\r\n    return <HeroList\r\n      heroes={heroes}\r\n      selectedHero={selectedHero}\r\n      onAddClick={() => setViewMode(ViewMode.Add)}\r\n      onEditClick={() => setViewMode(ViewMode.Edit)}\r\n      onRemoveClick={removeHero}\r\n      onSelectClick={selectHero}\r\n    />;\r\n  };\r\n\r\n  return (\r\n    <DynamicModuleLoader modules={[HeroModule]}>\r\n      <Hidden smDown={true}>\r\n        <Typography className=\"mb-24\" variant=\"h4\">\r\n          Heroes Application\r\n        </Typography>\r\n      </Hidden>\r\n      <Box display=\"flex\">\r\n        <Box flex=\"1 1 100%\" flexGrow={1} clone={true}>\r\n          <Card className=\"px-16\">\r\n            {cardView()}\r\n          </Card>\r\n        </Box>\r\n        <Hidden smDown={true}>\r\n          <Box className=\"section\" flex=\"1 1 100%\" flexGrow={1} ml={'5%'}>\r\n            <Typography variant=\"h5\">\r\n              A Simple Example...\r\n            </Typography>\r\n            <p>\r\n              This is a classic <Highlight>heroes</Highlight> CRUD example where you can add, edit or remove your favorite heroes.\r\n            </p>\r\n            <p>\r\n              State management is implemented using the beloved <Highlight>react-redux</Highlight>, the official React bindings for\r\n              <Highlight>redux</Highlight> library, combined with <Highlight>redux-saga</Highlight> middleware that adds side effect\r\n              capabilities on dispatched actions to execute asynchronous operations and interact with the store.\r\n            </p>\r\n            <p>\r\n              The form implementation is made with <Highlight>formik</Highlight> and <Highlight>formik-material-ui</Highlight> bindings\r\n              adapted for <Highlight>material-ui</Highlight> design library.\r\n            </p>\r\n            <p>\r\n              Backend server is mocked using <Highlight>redux-persist</Highlight> addon to persist state changes in LocalStorage\r\n              in combinaison with <Highlight>miragejs</Highlight> library to initially load stored data and mock HTTP\r\n              requests.\r\n            </p>\r\n            <p>\r\n              Transitions are made with <Highlight>react-spring</Highlight> library that makes it easy to write powerfull and interactive\r\n              animation sequences in a jiffy.\r\n            </p>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n        autoHideDuration={4000}\r\n        message={snackbarMessage}\r\n        onClose={onSnackbarClose}\r\n        open={snackbarOpen}\r\n      />\r\n    </DynamicModuleLoader>\r\n  );\r\n};\r\n\r\nexport default connector(Hero);\r\n","export { default } from './hero';\r\n"],"sourceRoot":""}